events {
}

http {

    include       mime.types;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    error_log   /var/log/nginx/error.log warn;

    sendfile        on;

    keepalive_timeout  65;
    map $request_method $limit {
        default         "";
        POST            $binary_remote_addr;
    }
  
    limit_req_zone $limit zone=my_zone:10m rate=6r/m;

    upstream node_service {
        server node-app:5000;
    }

    server {
        listen 4000;
        server_name localhost;

        location /api {

            limit_req zone=my_zone nodelay;

            proxy_pass http://node_service/api/data;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Handling CORS
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                # Allow all origins to send post request
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept';
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept' always;
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept' always;
            }
        }

        location / {
            return 404;

        }
    }
}